const express = require('express')const cors = require('cors')const app = express()const multer  = require('multer');const sharp = require('sharp');//设置跨域请求app.all('*', function (req, res, next) {    res.header("Access-Control-Allow-Origin", "*");    res.header('Access-Control-Allow-Headers', 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With');    res.header("Access-Control-Allow-Methods", "PUT,POST,GET,DELETE,OPTIONS");    res.header("X-Powered-By", ' 3.2.1')    res.header("Content-Type", "application/json;charset=utf-8");    next();});// mock dbconst db = {};app.use(cors())const hostname = '127.0.0.1'const port = 3000const _products = [    { id: 1, title: 'iPad Pro', price: 500.01 },    { id: 2, title: 'H&M T-Shirt White', price: 10.99 },    { id: 3, title: 'Charlie XCX - Sucker CD', price: 19.99 }]app.use(express.json())app.get('/products', (req, res) => {    res.status(200).json({        code: 1,        data: _products    })})app.get('/blur.hash', (req, res) => {    if (!req.query.id) {        return res.status(200).json({            code: 0,            msg: 'id呢？？',        })    }    res.status(200).json({        code: 1,        blurHash: db[`upload__${req.query.id}`]    })})app.post('/css.hash', (req, res) => {})app.post('/upload', (req, res) => {    if (!req.body.hash) {        return res.status(200).json({            code: 0,            msg: '没有hash值哦',        })    }    db[`upload__${req.body.id}`] = {        id: req.body.id,        hash: req.body.hash,        width: req.body.width,        height: req.body.height,    }    res.status(200).json({        code: 1,        msg: '存储完成'    })})// 文件储存路径const upload = multer({ dest: 'uploads/' })// 托管静态文件app.use('/uploads', express.static(__dirname + '/uploads'))app.post('/uploader', (req, res, next) => {    // console.log(req.files)    // res.status(200).json({    //     code: 1,    //     message: "ok",    // });    console.log(req.body);    const { avatar } = req.body;    //过滤data:URL    const base64Data = avatar.replace(/^data:image\/\w+;base64,/, "");    const dataBuffer = new Buffer(base64Data, 'base64');    console.log(dataBuffer)});app.listen(port, hostname, () => {    console.log(`Server is running at http://${hostname}:${port}/`)})